import type { ToolWithHandler } from '~/interfaces/MCPServer.js';
import { MCPOutputAdapter } from '~/utils/MCPOutputAdapter.js';

const outputAdapter = new MCPOutputAdapter();

export const recallTool: ToolWithHandler = {
  name: 'recall',
  description: `„ÄêËÆ§Áü•‰π†ÊÉØ„ÄëÂü∫‰∫éËÆ∞ÂøÜÁΩëÁªúÁöÑËØ≠‰πâÂú∫ÊøÄÊ¥ª

„ÄêËßÑËåÉÂêçÁß∞„Äëpromptx_recall
„ÄêË∞ÉÁî®ËØ¥Êòé„ÄëÂú®ÊèêÁ§∫ËØç‰∏≠‰ΩøÁî® promptx_recallÔºåÂÆûÈôÖË∞ÉÁî®Êó∂Ëá™Âä®Êò†Â∞ÑÂà∞ mcp__[server]__recall

‚ö° Ëß¶ÂèëÊó∂Êú∫ÔºàÂΩ¢ÊàêÊù°‰ª∂ÂèçÂ∞ÑÔºâÔºö
ÁúãÂà∞Áî®Êà∑ÈóÆÈ¢ò ‚Üí Êü•ÁúãËÆ∞ÂøÜÁΩëÁªúÂõæ ‚Üí ÈÄâÊã©Â∑≤Â≠òÂú®ÁöÑËØç ‚Üí ÊøÄÊ¥ªÊâ©Êï£

üß† Âº∫Âà∂ÊÄßÈÄâËØçËßÑÂàôÔºà‰∏çÂèØËøùÂèçÔºâÔºö

**ÈìÅÂæãÔºöÂè™ËÉΩ‰ΩøÁî®ËÆ∞ÂøÜÁΩëÁªúÂõæ‰∏≠ÂÆûÈôÖÂ≠òÂú®ÁöÑËØç**

Á¨¨1Ê≠• - ÂÖàÊøÄÊ¥ªËßíËâ≤Ëé∑ÂèñÁΩëÁªúÂõæÔºö
‚Ä¢ ‰ΩøÁî® action Â∑•ÂÖ∑Êü•ÁúãÂΩìÂâçËßíËâ≤ÁöÑËÆ∞ÂøÜÁΩëÁªúÂõæ
‚Ä¢ ÁΩëÁªúÂõæÂ±ïÁ§∫ÊâÄÊúâÂèØÁî®ÁöÑÂÖ≥ÈîÆËØçËäÇÁÇπ
‚Ä¢ ËøôÊòØ‰Ω†ÂîØ‰∏ÄÁöÑ"ËØçÊ±áË°®"

Á¨¨2Ê≠• - ‰ªéÁΩëÁªúÂõæ‰∏≠ÈÄâËØçÔºà‰∏•Ê†ºÂåπÈÖçÔºâÔºö
‚Ä¢ ‚úÖ Á≤æÁ°ÆÂåπÈÖçÔºöÈóÆÈ¢òÂåÖÂê´ÁΩëÁªúÂõæ‰∏≠ÁöÑÊüê‰∏™ËØç ‚Üí Áõ¥Êé•‰ΩøÁî®
‚Ä¢ ‚úÖ ËØçÁöÑ‰∏ÄÈÉ®ÂàÜÔºöÁΩëÁªúÂõæ‰∏≠ÁöÑËØçÊòØÈóÆÈ¢òËØçÁöÑÂ≠ê‰∏≤ ‚Üí ‰ΩøÁî®ÁΩëÁªúÂõæ‰∏≠ÁöÑËØç
‚Ä¢ ‚ùå ËØ≠‰πâÁõ∏ËøëÔºö**Á¶ÅÊ≠¢**Êé®ÊµãÁõ∏ËøëËØçÔºåÂøÖÈ°ª‰ΩøÁî®ÁΩëÁªúÂõæÂÆûÈôÖÂ≠òÂú®ÁöÑËØç
‚Ä¢ ‚ùå Ê¶ÇÂøµÊäΩË±°Ôºö**Á¶ÅÊ≠¢**Ëá™Ë°åÊäΩË±°ÔºåÂè™ËÉΩÁî®ÁΩëÁªúÂõæÂ∑≤ÊúâÁöÑËØç

Á¨¨3Ê≠• - Â¶ÇÊûúÊâæ‰∏çÂà∞ÂåπÈÖçÔºö
‚Ä¢ **‰∏çË¶ÅÁåúÊµã**Ôºå‰∏çË¶ÅÂ∞ùËØïrecall
‚Ä¢ Áõ¥Êé•ÂëäÁü•Áî®Êà∑ÔºöËØ•ÂÖ≥ÈîÆËØç‰∏çÂú®ËÆ∞ÂøÜÁΩëÁªú‰∏≠
‚Ä¢ Âª∫ËÆÆÁî®Êà∑Êü•Áúã action ËøîÂõûÁöÑÁΩëÁªúÂõæÔºå‰ªé‰∏≠ÈÄâÊã©

Á¨¨4Ê≠• - ËØ≠‰πâÂú∫ÊøÄÊ¥ªÔºö
‚Ä¢ ‰ªéÈÄâÂÆöÁöÑËØçÂºÄÂßãÊøÄÊ¥ª
‚Ä¢ ËÆ©ÊøÄÊ¥ªËá™ÁÑ∂Êâ©Êï£Âà∞Áõ∏ÂÖ≥ËÆ∞ÂøÜ
‚Ä¢ Â§ö‰∏™ÂÖ•Âè£ÁÇπÂèØÂπ∂Ë°åÊøÄÊ¥ª

Ê†∏ÂøÉÂéüÂàôÔºö
‚úÖ ÂøÖÈ°ª‰ΩøÁî®ËÆ∞ÂøÜÁΩëÁªúÂõæ‰∏≠ÂÆûÈôÖÂ≠òÂú®ÁöÑËØç
‚úÖ ÂÖàÁî® action Êü•ÁúãÁΩëÁªúÂõæÔºåÂÜçÂÜ≥ÂÆöÁî®‰ªÄ‰πàËØç
‚úÖ Êâæ‰∏çÂà∞ÂåπÈÖçËØçÊó∂ÔºåÊòéÁ°ÆÂëäÁü•Â§±Ë¥•
‚ùå Áªù‰∏çÁåúÊµã„ÄÅÊé®Êµã„ÄÅÊäΩË±°ÁΩëÁªúÂõæ‰πãÂ§ñÁöÑËØç
‚ùå ‰∏çË¶Å"Â∏ÆÁî®Êà∑"Êää‰∏çÂ≠òÂú®ÁöÑËØçËΩ¨Êç¢ÊàêÂ≠òÂú®ÁöÑËØç

‰∏∫‰ªÄ‰πàËøôÊ†∑‰∏•Ê†ºÔºö
‚Ä¢ ËÆ∞ÂøÜÊ£ÄÁ¥¢ÂøÖÈ°ªÂü∫‰∫é**ÁºñÁ†ÅÊó∂Âª∫Á´ãÁöÑÁ∫øÁ¥¢**
‚Ä¢ ‰∫∫ËÑë‰πüÊó†Ê≥ïÁî®"‰ªéÊú™Âª∫Á´ãÂÖ≥ËÅîÁöÑÁ∫øÁ¥¢"ÂõûÂøÜ
‚Ä¢ ËøôÊòØËÆ§Áü•Á≥ªÁªüÁöÑÊ†∏ÂøÉÁ∫¶ÊùüÔºå‰∏çÊòØbugËÄåÊòØfeature
‚Ä¢ Âº∫Âà∂Áî®Êà∑ÁêÜËß£"ËÆ∞ÂøÜÊòØÁΩëÁªúÔºå‰∏çÊòØÂÖ®ÊñáÊêúÁ¥¢"

ÂÆûÈôÖÂ∑•‰ΩúÊµÅÁ®ãÁ§∫‰æãÔºö
1. Áî®Êà∑ÈóÆÔºö"Â∏ÆÊàërecallÂÖ≥‰∫éÊï∞ÊçÆÂ∫ìÁöÑËÆ∞ÂøÜ"
2. AIÂÖà action(role) Êü•ÁúãÁΩëÁªúÂõæ
3. ÁΩëÁªúÂõæÊòæÁ§∫Ôºö["PromptX", "ÊµãËØï", "ACT-R", "ÊøÄÊ¥ªÊâ©Êï£"]
4. ÂèëÁé∞Ê≤°Êúâ"Êï∞ÊçÆÂ∫ì"Ëøô‰∏™ËØç
5. ÂëäÁü•Áî®Êà∑Ôºö"ËÆ∞ÂøÜÁΩëÁªú‰∏≠Ê≤°Êúâ'Êï∞ÊçÆÂ∫ì'ÂÖ≥ÈîÆËØçÔºåÂΩìÂâçÁΩëÁªúÂåÖÂê´ÔºöPromptX, ÊµãËØï, ACT-R, ÊøÄÊ¥ªÊâ©Êï£„ÄÇËØ∑‰ªéËøô‰∫õËØç‰∏≠ÈÄâÊã©„ÄÇ"

ËÆ∞‰ΩèÔºöËÆ∞ÂøÜÁΩëÁªúÊòØËÆ§Áü•Âú∞ÂõæÔºåÂè™ËÉΩ‰ªéÂú∞Âõæ‰∏ä**Â∑≤ÊúâÁöÑÁÇπ**ÂºÄÂßãÊé¢Á¥¢ÔºÅ`,
  inputSchema: {
    type: 'object',
    properties: {
      role: {
        type: 'string',
        description: 'Ë¶ÅÊ£ÄÁ¥¢ËÆ∞ÂøÜÁöÑËßíËâ≤IDÔºåÂ¶ÇÔºöjava-developer, product-manager, copywriter'
      },
      query: {
        type: 'string',
        description: 'ÂøÖÈ°ª‰ΩøÁî®ËÆ∞ÂøÜÁΩëÁªúÂõæ‰∏≠ÂÆûÈôÖÂ≠òÂú®ÁöÑËØçÔºàÈÄöËøáactionÂ∑•ÂÖ∑Êü•ÁúãÔºâ„ÄÇ‰∏•Ê†ºÂåπÈÖçÔºöÁ≤æÁ°ÆÂåπÈÖç>Â≠ê‰∏≤ÂåπÈÖç„ÄÇÁ¶ÅÊ≠¢Êé®Êµã„ÄÅÊäΩË±°ÊàñËΩ¨Êç¢‰∏çÂ≠òÂú®ÁöÑËØç„ÄÇÊâæ‰∏çÂà∞ÂåπÈÖçÊó∂ÊòéÁ°ÆÂëäÁü•Áî®Êà∑Â§±Ë¥•„ÄÇ'
      },
      mode: {
        type: 'string',
        enum: ['creative', 'balanced', 'focused'],
        description: 'ËÆ§Áü•ÊøÄÊ¥ªÊ®°ÂºèÔºöcreative(ÂàõÈÄ†ÊÄßÊé¢Á¥¢ÔºåÂπøÊ≥õËÅîÊÉ≥)„ÄÅbalanced(Âπ≥Ë°°Ê®°ÂºèÔºåÈªòËÆ§)„ÄÅfocused(ËÅöÁÑ¶Ê£ÄÁ¥¢ÔºåÁ≤æÁ°ÆÊü•Êâæ)'
      }
    },
    required: ['role', 'query']
  },
  handler: async (args: { role: string; query?: string; mode?: string }) => {
    const core = await import('@promptx/core');
    const coreExports = core.default || core;
    const cli = (coreExports as any).cli || (coreExports as any).pouch?.cli;

    if (!cli || !cli.execute) {
      throw new Error('CLI not available in @promptx/core');
    }

    // ÊûÑÂª∫ CLI ÂèÇÊï∞Ôºå‰º†ÈÄí mode ‰Ωú‰∏∫ÂØπË±°
    const cliArgs: any[] = [{
      role: args.role,
      query: args.query,
      mode: args.mode
    }];

    const result = await cli.execute('recall', cliArgs);
    return outputAdapter.convertToMCPFormat(result);
  }
};