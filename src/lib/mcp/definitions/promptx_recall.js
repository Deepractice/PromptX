module.exports = {
  name: 'promptx_recall',
  description: `🔍 [智能记忆检索器] PromptX专业AI记忆体系的核心检索工具
基于认知心理学检索线索理论，智能检索指定角色的专业经验和知识。

何时使用此工具:
- 处理涉及私有信息的任务（用户背景、项目细节、组织结构）
- 遇到预训练知识无法覆盖的专业领域问题
- 需要了解特定技术栈的历史决策和配置信息
- 感知到语义鸿沟需要外部专业知识补充
- 用户提及过往经验或类似问题的解决方案
- 当前任务上下文触发了相关记忆线索
- 需要避免重复已解决问题的错误路径
- 个性化服务需要了解用户偏好和工作习惯

核心检索能力:
- 基于三层检索策略：关键词精确匹配、语义相关分析、时空关联检索
- 支持XML技术记忆的转义字符还原和格式美化
- 智能相关性评估：直接相关、间接相关、背景相关、结构相关
- 渐进式信息呈现：摘要优先、结构化展示、按需详情展开
- 上下文驱动的记忆激活和关联分析
- 自动识别记忆时效性并提供更新建议
- 跨记忆关联发现和知识图谱构建

使用前置条件:
- 必须已通过promptx_action激活PromptX角色
- 激活后将自动切换到PromptX专业记忆体系
- 客户端原生记忆功能将被禁用以避免冲突
- 确保检索目标与当前激活角色匹配

检索策略说明:
- query参数：仅在确信能精确匹配时使用（如"女娲"、"PromptX"、"MCP"等专有名词）
- 语义搜索：不确定时留空query获取全量记忆进行语义匹配
- **强制补充检索**：如使用query参数检索无结果，必须立即无参数全量检索
- **检索优先级**：全量检索 > 部分匹配 > 空结果，宁可多检索也不遗漏
- **用户查询场景**：对于用户的自然语言查询（如"明天安排"、"项目进度"等），优先使用全量检索

你应该:
1. 感知到预训练知识不足时主动触发记忆检索
2. 优先检索与当前任务上下文最相关的专业记忆
3. 根据检索线索调整查询策略提升检索精度
4. 利用检索结果建立当前任务的知识上下文
5. 识别记忆时效性对过时信息进行标记提醒
6. 将检索到的经验应用到当前问题的解决方案中
7. **关键策略：如果使用query参数没有检索到结果，必须立即使用无参数方式全量检索**
8. 宁可多检索也不要遗漏重要的相关记忆信息`,
  inputSchema: {
    type: 'object',
    properties: {
      role: {
        type: 'string',
        description: '要检索记忆的角色ID，如：java-developer, product-manager, copywriter'
      },
      query: {
        type: 'string',
        description: '检索关键词，仅在确信能精确匹配时使用（如"女娲"、"PromptX"等具体词汇）。语义搜索或不确定时请留空以获取全量记忆，如果使用关键字无结果建议重试无参数方式'
      },
      random_string: {
        type: 'string',
        description: 'Dummy parameter for no-parameter tools'
      }
    },
    required: ['role', 'random_string']
  }
};