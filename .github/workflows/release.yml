name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no actual publish)'
        type: boolean
        required: false
        default: true
      release_type:
        description: 'Release type'
        type: choice
        required: true
        default: 'alpha'
        options:
          - alpha
          - beta
          - latest

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    # 防止在本地测试时意外发布
    if: ${{ github.event_name != 'pull_request' }}
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🔧 Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
        cache: 'pnpm'
    
    - name: 📦 Install dependencies
      run: pnpm install --frozen-lockfile
      env:
        HUSKY: 0
    
    - name: 🏗️ Build
      run: pnpm build || echo "No build script"
    
    # Dry run 测试
    - name: 🧪 Test Release (Dry Run)
      if: ${{ inputs.dry_run == true || env.IS_LOCAL_TEST == 'true' }}
      run: |
        echo "🧪 Running in dry-run mode - NO ACTUAL PUBLISH"
        echo "Release type: ${{ inputs.release_type || 'alpha' }}"
        
        # 测试changeset版本
        pnpm changeset status || echo "No changesets found"
        
        # 测试npm发布（不会真的发布）
        npm publish --dry-run
        
        echo "✅ Dry run completed successfully"
    
    # 真实发布（需要多重条件）
    - name: 🚀 Create Release
      if: |
        inputs.dry_run == false && 
        github.event_name == 'workflow_dispatch' &&
        github.ref == 'refs/heads/main' &&
        !env.IS_LOCAL_TEST &&
        !env.ACT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        echo "🚀 Publishing ${{ inputs.release_type }} release"
        
        # 配置git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # 根据类型发布
        if [ "${{ inputs.release_type }}" = "latest" ]; then
          pnpm changeset publish
        else
          pnpm changeset version --snapshot ${{ inputs.release_type }}
          pnpm changeset publish --tag ${{ inputs.release_type }}
        fi
    
    - name: 📊 Release Summary
      if: always()
      run: |
        echo "### Release Summary"
        echo "- Dry Run: ${{ inputs.dry_run == true || env.IS_LOCAL_TEST == 'true' }}"
        echo "- Release Type: ${{ inputs.release_type || 'N/A' }}"
        echo "- Branch: ${{ github.ref }}"
        echo "- Local Test: ${{ env.IS_LOCAL_TEST || 'false' }}"
        echo "- Act Environment: ${{ env.ACT || 'false' }}"